version: '3'
services:
  cnode:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - env=value
    # image: cnode/egg-cnode:latest
    environment:
      - NODE_ENV=production
      - EGG_SERVER_ENV=prod
      - EGG_REDIS_DB=0
      - EGG_REDIS_HOST=redis
      - EGG_REDIS_PORT=6379
      - EGG_REDIS_PASSWORD=tree_node
      - EGG_MONGODB_URL=mongodb://tree_node:tree_node@mongodb:27017/tree_node
      - EGG_MINI_ASSETS=true
      - EGG_PASSPORT_GITHUB_CLIENT_ID=test
      - EGG_PASSPORT_GITHUB_CLIENT_SECRET=test
      # - EGG_SITE_STATIC_HOST=${EGG_SITE_STATIC_HOST}
      - EGG_ALINODE_APPID=76338
      - EGG_ALINODE_SECRET=08991c3aea49068359d1e09d28fe106247c8e5bf
    depends_on:
      - redis
      - mongodb
    networks:
      - docker_cnode
    ports:
      - 7002:7002

  redis:
    image: redis:3.2-alpine
    command: redis-server --appendonly yes --requirepass tree_node
    volumes:
      - egg-redis:/data
    networks:
      - docker_cnode
    # ports:
    #   - 6379:6379

  mongodb:
    image: mongo:3.2
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongodb
      - MONGO_INITDB_DATABASE=tree_node
    volumes:
      - egg-mongo:/data/db
      - ./init.d/mongo:/docker-entrypoint-initdb.d
    networks:
      - docker_cnode
    # ports:
    #   - 27018:27017
    expose:
      - '27017'

volumes:
  egg-mongo:
  egg-redis:

networks:
  docker_cnode:
    driver: bridge
